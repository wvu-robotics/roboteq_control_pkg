# This file was autogenerated by:
#     /roboteq_control_pkg/roboteq_control_pkg/gen_roboteq_consts/generate_roboteq_constants.py

class _rt_runtime_commands():

  def __init__(self): 
      self.Set_Acceleration = "AC"
      self.Next_Acceleration = "AX"
      self.Boolean_Variable = "B"
      self.Spectrum_Bind = "BND"
      self.Set_Encoder_Counters = "C"
      self.Set_Brushless_Counter = "CB"
      self.Set_Motor_Command_via_CAN = "CG"
      self.CAN_Send = "CS"
      self.Set_SSI_Sensor_Counter = "CSS"
      self.Raw_Redirect_Send = "CU"
      self.Reset_Individual_Digital_Out_bits = "D0"
      self.Set_Individual_Digital_Out_bits = "D1"
      self.Set_Deceleration = "DC"
      self.Set_all_Digital_Out_bits = "DS"
      self.Next_Decceleration = "DX"
      self.Save_Confguration_in_EEPROM = "EES"
      self.Emergency_Shutdown = "EX"
      self.Go_to_Speed_or_to_Relative_Position = "G"
      self.Go_to_Torque_Amps = "GIQ"
      self.Go_to_Flux_Amps = "GID"
      self.Load_Home_counter = "H"
      self.Emergency_Stop_Release = "MG"
      self.Stop_in_all_modes = "MS"
      self.Go_to_Absolute_Desired_Position = "P"
      self.Go_to_Relative_Desired_Position = "PR"
      self.Next_Go_to_Relative_Desired_Position = "PRX"
      self.Next_Go_to_Absolute_Desired_Position = "PX"
      self.MicroBasic_Run = "R"
      self.Set_Pulse_Out = "RC"
      self.Set_Motor_Speed = "S"
      self.Safety_Stop = "SFT"
      self.STO_Self_Test = "STT"
      self.Next_Velocity = "SX"
      self.Set_User_Variable = "VAR"

RT_RUNTIME_COMMANDS = _rt_runtime_commands()


class _rt_motor_configurations():

  def __init__(self): 
      self.Amps_Limit = "ALIM"
      self.Amps_Trigger_Action = "ATGA"
      self.Amps_Trigger_Delay = "ATGD"
      self.Amps_Trigger_Level = "ATRIG"
      self.Brake_Delay = "BKD"
      self.Bypass_Trajectory_Ramp = "BPR"
      self.Brake_Release_Voltage = "BRV"
      self.Brake_Hold_Voltage = "BHV"
      self.Brake_Delay_Time = "BDT"
      self.Closed_Loop_Feedback_Sensor = "BLFB"
      self.Stall_Detection = "BLSTD"
      self.Close_Loop_Error_Detection = "CLERD"
      self.Motor_Fault_Deceleration_Rate = "EDEC"
      self.Encoder_Max_Limit = "EHL"
      self.Encoder_Action_at_Max = "EHLA"
      self.Encoder_Home_Count = "EHOME"
      self.Encoder_Min_Limit = "ELL"
      self.Encoder_Action_at_Min = "ELLA"
      self.Encoder_Usage = "EMOD"
      self.Encoder_Pulse_Rev_Value = "EPPR"
      self.PID_Integrator_Limit = "ICAP"
      self.PID_Differential_Gain = "KDG"
      self.PID_Integral_Gain = "KIG"
      self.PID_Proportional_Gain = "KPG"
      self.Motor_Acceleration_Rate = "MAC"
      self.Motor_Deceleration_Rate = "MDEC"
      self.Molex_Input = "MLX"
      self.Operating_Mode = "MMOD"
      self.Min_Speed_RPM_Value = "MNRPM"
      self.Position_Mode_Velocity = "MVEL"
      self.Mixed_Mode = "MXMD"
      self.Motor_Max_Power_Forward = "MXPF"
      self.Motor_Max_Power_Reverse = "MXPR"
      self.Max_Speed_RPM = "MXRPM"
      self.Position_Turns_Min_to_Max = "MXTRN"
      self.Overvoltage_hysteresis = "OVH"
      self.Overvoltage_Limit = "OVL"
      self.Over_Temperature_Limit = "OTL"
      self.SSI_Sensor_Resolution = "SCPR"
      self.Sensor_Error_Detection = "SED"
      self.SSI_Sensor_Max_Limit = "SHL"
      self.SSI_Sensor_Action_at_Max = "SHLA"
      self.SSI_Sensor_Home_Count = "SHOME"
      self.SSI_Sensor_Min_Limit = "SLL"
      self.SSI_Sensor_Action_at_Min = "SLLA"
      self.SSI_Sensor_Usage = "SMOD"
      self.Motor_Torque_Constant = "TNM"
      self.Undervoltage_Limit = "UVL"

RT_MOTOR_CONFIGURATIONS = _rt_motor_configurations()


class _tcp_communication_commands():

  def __init__(self): 
      self.Enable_DHCP = "DHCP"
      self.Gateway_Address = "GWA"
      self.IP_Address = "IPA"
      self.IP_Port = "IPP"
      self.Primary_DNS = "PDNS"
      self.Subnet_Mask = "SBM"
      self.Secondary_DNS = "SDNS"
      self.TCP_Mode = "WMOD"

TCP_COMMUNICATION_COMMANDS = _tcp_communication_commands()


class _rt_ac_induction_specific_commands():

  def __init__(self): 
      self.AC_Induction_Operating_Mode = "BFBK"
      self.Mutual_Inductance = "ILM"
      self.Rotor_Leakage_Inductance = "ILLR"
      self.Rotor_Resistance = "IRR"
      self.Minimum_Power = "MPW"
      self.Optimal_Slip_Frequency = "MXS"
      self.Rotor_Flux_Current = "RFC"
      self.AC_Induction_Volts_per_Hertz = "VPH"

RT_AC_INDUCTION_SPECIFIC_COMMANDS = _rt_ac_induction_specific_commands()


class _rt_can_communication_commands():

  def __init__(self): 
      self.CANOpen_Auto_start = "CAS"
      self.CAN_Bit_Rate = "CBR"
      self.CAN_Mode = "CEN"
      self.CAN_Heartbeat = "CHB"
      self.CAN_Consumer_Heartbeat_Lost_Action = "CHLA"
      self.CAN_Listen_Node_ID = "CLSN"
      self.CAN_Node_ID = "CNOD"
      self.MiniCAN_SendRate = "CSRT"
      self.CANOpen_TPDO_SendRate = "CTPS"
      self.CANOpen_Transmission_Type = "CTT"
      self.DS402_FSA = "FSA"

RT_CAN_COMMUNICATION_COMMANDS = _rt_can_communication_commands()


class _rt_general_configuration_and_safety():

  def __init__(self): 
      self.Analog_Center_Command_to_Start = "ACS"
      self.Analog_keep_within_Guard_Bands = "AMS"
      self.User_Storage_in_Battery_Backed_RAM = "BEE"
      self.Script_Auto_Start = "BRUN"
      self.Linearity_Command_Linearity = "CLIN"
      self.Command_Priorities = "CPRI"
      self.Default_Command_value = "DFC"
      self.Modbus_Mode = "DMOD"
      self.Enable_Disable_Serial_Echo = "ECHOF"
      self.User_Defined_Values = "EE"
      self.Raw_Redirect_Mode = "ISM"
      self.Modbus_Data_Alignment = "MDAL"
      self.Modbus_Slave_ID = "MNOD"
      self.Pulse_keep_within_Min___Max_Safety = "PMS"
      self.Enable_RS485 = "RS485"
      self.Set_RS232_RS485_baudrate = "RSBR"
      self.Serial_Data_Watchdog = "RWD"
      self.Select_Print_output_port_for_scripting = "SCRO"
      self.Spektrum_Center = "SKCTR"
      self.Spektrum_Deadband = "SKDB"
      self.Spektrum_Linearity = "SKLIN"
      self.Spektrum_Max = "SKMAX"
      self.Spektrum_Min = "SKMIN"
      self.Assign_Spektrum_port_to_motor_command = "SKUSE"
      self.Safe_Torque_Off = "STO"
      self.Telemetry_string = "TELS"

RT_GENERAL_CONFIGURATION_AND_SAFETY = _rt_general_configuration_and_safety()


class _rt_ds402_runtime_commands():

  def __init__(self): 
      self.Control_Word__DS402_ = "CW"
      self.Following_Error_Window__DS402_ = "FEW"
      self.Following_Error_Time_Out__DS402_ = "FET"
      self.Interpolation_Time_Period__DS402_ = "INT"
      self.Max_Motor_Speed__DS402_ = "MSL"
      self.Profile_Acceleration__DS402_ = "PAC"
      self.Profile_Deceleration__DS402_ = "PDC"
      self.Software_Position_Limit__DS402_ = "PLT"
      self.Target_Position__DS402_ = "POS"
      self.Profile_Velocity__DS402_ = "PSP"
      self.Modes_of_Operation__DS402_ = "ROM"
      self.Target_Velocity__DS402_ = "SPE"
      self.Velocity_Acceleration__DS402_ = "SAC"
      self.Velocity_Deceleration__DS402_ = "SDC"
      self.Target_Profile_Velocity__DS402_ = "SPC"
      self.Velocity_Min_Max_Amount__DS402_ = "SPL"
      self.Target_Torque__DS402_ = "TC"
      self.Torque_Slope__DS402_ = "TSL"

RT_DS402_RUNTIME_COMMANDS = _rt_ds402_runtime_commands()


class _rt_runtime_queries():

  def __init__(self): 
      self.Read_Motor_Amps = "A"
      self.Read_Analog_Inputs = "AI"
      self.Read_Analog_Input_after_Conversion = "AIC"
      self.Read_Rotor_Angle = "ANG"
      self.Read_Raw_Sin_Cos_sensor = "ASI"
      self.Read_User_Boolean_Variable = "B"
      self.Read_Battery_Amps = "BA"
      self.Read_Brushless_Count_Relative = "BCR"
      self.Read_BL_Motor_Speed_in_RPM = "BS"
      self.Read_Battery_State_of_Charge_in_percentage = "BSC"
      self.Read_BL_Motor_Speed_as_1_1000_of_Max_RPM = "BSR"
      self.Read_Battery_State_Of_Charge_in_AmpHours = "BMC"
      self.Read_BMS_Status_Flags = "BMF"
      self.Read_BMS_Switch_States = "BMS"
      self.Read_Encoder_Counter_Absolute = "C"
      self.Read_Raw_CAN_frame = "CAN"
      self.Read_Absolute_Brushless_Counter = "CB"
      self.Read_Raw_Redirect_Received_Frames_Count = "CD"
      self.Read_Raw_CAN_Received_Frames_Count = "CF"
      self.CAN_Consumer_Heartbeat_Status = "CHS"
      self.Read_Converted_Analog_Command = "CIA"
      self.Read_Internal_Pulse_Command = "CIP"
      self.Read_Internal_Serial_Command = "CIS"
      self.Read_RoboCAN_Alive_Nodes_Map = "CL"
      self.Read_Encoder_Count_Relative = "CR"
      self.Read_Relative_SSI_Sensor_Counter = "CSR"
      self.Read_Absolute_SSI_Sensor_Counter = "CSS"
      self.Read_Digital_Inputs = "D"
      self.Read_Individual_Digital_Inputs = "DI"
      self.Read_Raw_Redirect_Received_Frame = "DDT"
      self.Read_Digital_Output_Status = "DO"
      self.Read_Motor_DC_Peak_Amps = "DPA"
      self.Read_Destination_Reached = "DR"
      self.Read_Closed_Loop_Error = "E"
      self.Read_Feedback = "F"
      self.Read_FOC_Angle_Adjust = "FC"
      self.Read_Flow_Sensor_Counter = "FLW"
      self.Read_Fault_Flags = "FF"
      self.Read_Firmware_ID = "FID"
      self.Read_Firmware_ID__numerical_ = "FIN"
      self.Read_Runtime_Status_Flag = "FM"
      self.Read_Status_Flags = "FS"
      self.Read_Hall_Sensor_States = "HS"
      self.Is_RoboCAN_Node_Alive = "ICL"
      self.Read_Spektrum_Receiver = "K"
      self.Read_Lock_status = "LK"
      self.Read_Motor_Command_Applied = "M"
      self.Read_Field_Oriented_Control_Motor_Amps = "MA"
      self.Read_Magsensor_Track_Detect = "MGD"
      self.Read_Magsensor_Markers = "MGM"
      self.Read_Magsensor_Status = "MGS"
      self.Read_Magsensor_Track_Position = "MGT"
      self.Read_Magsensor_Gyroscope = "MGY"
      self.Read_MagSensor_Tape_Cross_Detection = "MGX"
      self.Read_Motor_Power_Output_Applied = "P"
      self.Read_Phase_Amps = "PHA"
      self.Read_Pulse_Inputs = "PI"
      self.Read_Pulse_Input_after_Conversion = "PIC"
      self.Read_Encoder_Motor_Speed_in_RPM = "S"
      self.Read_Script_Checksum = "SCC"
      self.Read_Sensor_Errors = "SEC"
      self.Read_Raw_Redirect_Received_Frame_as_string = "SDT"
      self.Read_Sensor_Angle = "SNA"
      self.Read_Encoder_Speed_Relative = "SR"
      self.Read_SSI_Sensor_Motor_Speed_in_RPM = "SS"
      self.Read_SSI_Sensor_Speed_Relative = "SSR"
      self.Indication_STO_Self_Test_Result = "STT"
      self.Read_Temperature = "T"
      self.Read_Time = "TM"
      self.Read_Position_Relative_Tracking = "TR"
      self.Read_Control_Unit_type_and_Controller_Model = "TRN"
      self.Read_MCU_Id = "UID"
      self.Read_Volts = "V"
      self.Read_User_Integer_Variable = "VAR"

RT_RUNTIME_QUERIES = _rt_runtime_queries()


class _rt_analog_digital_pluse_io_configurations():

  def __init__(self): 
      self.Analog_Input_Center__0_ = "ACTR"
      self.Analog_Input_Deadband = "ADB"
      self.Analog_Input_Use = "AINA"
      self.Analog_Input_Linearity = "ALIN"
      self.Analog_Input_Max = "AMAX"
      self.Analog_Input_Action_at_Max = "AMAXA"
      self.Analog_Input_Min = "AMIN"
      self.Analog_Input_Action_at_Min = "AMINA"
      self.Analog_Conversion_Type = "AMOD"
      self.Analog_Input_Conversion_Polarity = "APOL"
      self.Digital_Input_Action = "DINA"
      self.Digital_Input_Active_Level = "DINL"
      self.Digital_Output_Action = "DOA"
      self.Digital_Outputs_Active_Level = "DOL"
      self.Pulse_Input_Center = "PCTR"
      self.Pulse_Input_Deadband = "PDB"
      self.Pulse_Input_Use = "PINA"
      self.Pulse_Input_Linearity = "PLIN"
      self.Pulse_Input_Max = "PMAX"
      self.Pulse_Input_Action_at_Max = "PMAXA"
      self.Pulse_Input_Min = "PMIN"
      self.Pulse_Input_Action_at_Min = "PMINA"
      self.Pulse_Input_Capture_Type = "PMOD"
      self.Pulse_Input_Capture_Polarity = "PPOL"

RT_ANALOG_DIGITAL_PLUSE_IO_CONFIGURATIONS = _rt_analog_digital_pluse_io_configurations()


class _rt_brushless_specific_commands():

  def __init__(self): 
      self.Brushless_Angle_Zero_Adjust = "BADJ"
      self.Brushless_timing_angle_adjust = "BADV"
      self.BEMF_Coupling_Constant = "BECC"
      self.Brushless_Sinusoidal_Angle_Sensor = "BFBK"
      self.Brushless_Internal_Sensor_Max_Limit = "BHL"
      self.Brushless_Internal_Sensor_Action_at_Max = "BHLA"
      self.Brushless_Internal_Sensor_Home_Count = "BHOME"
      self.Brushless_Internal_Sensor_Min_Limit = "BLL"
      self.Brushless_Internal_Sensor_Action_at_Min = "BLLA"
      self.Brushless_Switching_Mode = "BMOD"
      self.Number_of_pole_pairs = "BPOL"
      self.Brushless_Reference_Seek_Power = "BZPW"
      self.Hall_Sensor_Position_Type = "HPO"
      self.Hall_Sensor_Angle_Table = "HSAT"
      self.Hall_Sensor_Map = "HSM"
      self.Current_PID_Integral_Gain = "KIF"
      self.Current_PID_Proportional_Gain = "KPF"
      self.D_axis_motor_Inductance = "LD"
      self.Q_axis_motor_Inductance = "LQ"
      self.Phase_Shift_Angle = "PSA"
      self.Motor_Stator_Resistance = "RS"
      self.SinCos_SSI_Sensor_Poles = "SPOL"
      self.Sensorless_Start_Up_Frequency = "SSF"
      self.BEMF_Integrator_Limit = "SVT"
      self.Swap_Windings = "SWD"
      self.FOC_Target_Id = "TID"
      self.Motor_Voltage_constant = "VK"
      self.Cos_Amplitude = "ZSMA"
      self.SinCos_Calibration = "ZSMC"

RT_BRUSHLESS_SPECIFIC_COMMANDS = _rt_brushless_specific_commands()


class _rt_ds402_runtime_queries():

  def __init__(self): 
      self.Modes_of_Operation_Display__DS402_ = "AOM"
      self.Control_Word__DS402_ = "CW"
      self.Velocity_Actual_Value__DS402_ = "SPE"
      self.Following_Error_Window__DS402_ = "FEW"
      self.Following_Error_Time_Out__DS402_ = "FET"
      self.Interpolation_Time_Period__DS402_ = "INT"
      self.Max_Motor_Speed__DS402_ = "MSL"
      self.Profile_Acceleration__DS402_ = "PAC"
      self.Profile_Deceleration__DS402_ = "PDC"
      self.Software_Position_Limit__DS402_ = "PLT"
      self.Target_Position__DS402_ = "POS"
      self.Profile_Velocity__DS402_ = "PSP"
      self.Position_Actual_Value__DS402_ = "PST"
      self.Velocity_Demand__DS402_ = "RMP"
      self.Modes_of_Operation__DS402_ = "ROM"
      self.Target_Velocity__DS402_ = "S16"
      self.Velocity_Acceleration__DS402_ = "SAC"
      self.Velocity_Deceleration__DS402_ = "SDC"
      self.Supported_Drive_Modes__DS402_ = "SDM"
      self.Target_Profile_Velocity__DS402_ = "SPC"
      self.Velocity_Min_Max_Amount__DS402_ = "SPL"
      self.Status_Word__DS402_ = "SW"
      self.Target_Torque__DS402_ = "TC"
      self.Torque_Actual_Value__DS402_ = "TRQ"
      self.Torque_Slope__DS402_ = "TSL"
      self.Velocity_Demand_Value__DS402_ = "VDV"
      self.Velocity_Sensor_Actual_Value__DS402_ = "VSA"
      self.Version_Number__DS402_ = "VNM"

RT_DS402_RUNTIME_QUERIES = _rt_ds402_runtime_queries()


class _rt_maintenance_commands():

  def __init__(self): 
      self.Motor_Sensor_Setup = "CLMOD"
      self.Reset_configuration_to_factory_defaults = "CLRST"
      self.Save_calibrations_to_Flash = "CLSAV"
      self.Update_Firmware_via_USB = "DFU"
      self.Load_Parameters_from_EEPROM = "EELD"
      self.Dump_Flash_Log_Data = "EELOG"
      self.Reset_Factory_Defaults = "EERST"
      self.Save_Configuration_in_EEPROM = "EESAV"
      self.Erase_Flash_Log_Data = "ERASE"
      self.Lock_Configuration_Access = "LK"
      self.Reset_Controller = "RESET"
      self.Script_Load = "SLD"
      self.Set_Time = "STIME"
      self.Unlock_Configuration_Access = "UK"

RT_MAINTENANCE_COMMANDS = _rt_maintenance_commands()


